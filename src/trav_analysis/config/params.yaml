predicter:
  ros__parameters:
    # paths for the data to be stored to and loaded from
    # If no relative paths are wanted, just set baseDirPath to "/" (absolute path starting)
    # the base directory, as ROS default, is the hidden folder ~/.ros/
    baseDirPath      : "/home/fusy/.ros/"
  #  dataPath      : "merged.txt"
    dataPath      : "data_new_01.txt"
    normalizationConfigPath : "norm_params_new_01.txt"

    linearSVMPath : "linear_svm.yml"
    polySVMPath   : "poly_svm.yml"
    rbfSVMPath    : "rbf_svm_new_01.yml"

    # Online System parameters
  #  svmModelPath: "rbf_svm_small.yml"
    svmModelPath: "rbf_svm_new_01.yml"

    ## COLORS
    showGridProjectionOnImage_flag: false

    # Grid parameters
    radiusOfAttention : 12.0    # [meters] the grid's side length
    mapResolution     : 0.4     # [meters] the length of each cell of the grid

    internalCellResolution: 0.2 # [meters]

    minPointsInBucket: 2
    minPointsInBucketToProjectToCamera: 15
    minNeighborsToPropagateLabel: 1
    predictedLabelWeight: 3

    cloudsQueueFixedSize: 5

    timingVerbosity: 1


    globalMapSide: 200.0
  #  maxPointHeight: -2.0
    maxPointHeight: 0

    curvityBucketsNum_singlescan: 40
    curvityBucketsNum_multiscan: 0

    # Camera Projection data TODO: implement right camera matrices
    P2: [ 7.18856e+02, 0.0e+00, 6.071928e+02, 4.538225e+01,
          0.0e+00, 7.18856e+02, 1.852157e+02, -1.130887e-01,
          0.0e+00, 0.0e+00, 1.0e+00, 3.779761e-03 ]

    Tr: [ 4.276802385584e-04, -9.999672484946e-01, -8.084491683471e-03, -4.069766e-03,
          -7.210626507497e-03, 8.081198471645e-03, -9.999413164504e-01, -7.631618e-02,
          9.999738645903e-01, 4.859485810390e-04, -7.206933692422e-03, -2.717806e-01,
          .0, .0, .0, 1.0 ]

    # Training
    trainingRatio : 0.6
    kfolds        : 4
    termCriteria  : 1e-9
    skipColsWithIndex: [11.0, 20.0, 21.0]     # [0, 1, 2, 3, 4, 5, 6, 8, 11, 18] #[8, 11, 18]
#    skipColsWithIndex: ["11", "20", "21"]     # [0, 1, 2, 3, 4, 5, 6, 8, 11, 18] #[8, 11, 18]
  #  skipColsWithIndex: [ 11, 18, 19, 20, 21] #[0, 1, 2, 3, 4, 5, 6, 8, 11, 18] #[8, 11, 18]

    useLinearSVM: false
    usePolySVM  : false
    useRbfSVM   : true

    saveLinearSVM : true
    savePolySVM   : true
    saveRbfSVM    : true

    linearSVM_Nu: [0.9] #[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
    linearSVM_Gamma: [0.1, 0.2, 0.3, 0.5, 0.7, 1.0, 1.5, 3.5, 5.0, 10.0]

    polySVM_Nu: [0.1, 0.2, 0.6]
    polySVM_Gamma: [0.2, 0.5, 1.0, 3.0]
    polySVM_Degree: [3.0, 5.0, 7.0]

  #  rbfSVM_Nu: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]
  #  rbfSVM_Gamma: [ 0.2, 0.5, 1.0, 3.5, 5.0, 7.0]

  #  rbfSVM_Nu:  [ 0.02, 0.05, 0.1]
  #  rbfSVM_Gamma: [ 1, 3]
    rbfSVM_Nu:  [ 0.02, 0.05, 0.1, 0.3]
    rbfSVM_Gamma: [1.0, 3.0, 10.0, 100.0]
  #  rbfSVM_Nu:  [ 0.02, 0.05, 0.2]
  #  rbfSVM_Gamma: [ 0.5, 1, 3, 10, 100]
  #  rbfSVM_Gamma: [ 0.1, 3, 10, 25, 50, 75, 100] #[3.5, 3.55, 3.6, 4.0] #[ 2.75, 3.0, 3.25, 3.5]
  #  rbfSVM_Gamma: [ 0.1, 0.3, 0.75, 1, 2, 3, 6, 10, 100] #[3.5, 3.55, 3.6, 4.0] #[ 2.75, 3.0, 3.25, 3.5]

  #  rbfSVM_Nu:  [0.02] #, 0.265, 0.2675 ]
  #  rbfSVM_Gamma: [ 1] #, 3.55, 3.6, 10 ]


    # Topics
    pointCloudTopic: "/velodyne_points"               # Point cloud data
    leftImageTopic: "/semantickitti/camera_color_left/image_raw"
    trueTraversabilityTopic: "trav_analysis/trueTraversability"
    predictedTraversabilityTopic: "trav_analysis/predictedTraversability"
    cameraCloudTopic: "trav_analysis/cameraColoredCloud"
    integratedCloudsTopic: "trav_analysis/integratedClouds"

    # Frames
    lidarFrame: "velodyne"
#    lidarFrame: "base_footprint"
    baselinkFrame: "base_link"
    odometryFrame: "base_link"
    mapFrame: "map"

  #  vehicleXMin: -1.8
  #  vehicleXMax:  1.0
  #  vehicleYMin: -1.0
  #  vehicleYMax:  1.0
    vehicleXMin: -4.8
    vehicleXMax:  3.0
    vehicleYMin: -2.0
    vehicleYMax:  2.0